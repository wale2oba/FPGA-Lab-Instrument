library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity RGB IS 
   port(texton , graphon ,paron ,par2on,Adcgraphon,AdcgraphonB : in std_logic := '0' ;
		  R: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		  G: OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
		  B: OUT STD_LOGIC_VECTOR (7 DOWNTO 0)
	);
		  
end RGB;


architecture behaviour of RGB is 
begin
----------------------------------------------------------------------------
process(texton,graphon,paron,par2on,Adcgraphon,AdcgraphonB)
begin

--  if( (texton = '1')  or (graphon = '1') ) then
  if( texton = '1') then
     R <= "11001111" ;
     G <= "11111001" ;
     B <= "00111111" ;	  
  elsif( Adcgraphon = '1') then
     R <= "11001001" ;
     G <= "10011001" ;
     B <= "00111011" ;
  elsif( AdcgraphonB = '1') then
     R <= "11001001" ;
     G <= "11111101" ;
     B <= "00111000" ;	  
  elsif(graphon = '1') then
	  R <= "11111111" ;
     G <= "11111111" ;
     B <= "11111111" ;
  elsif(paron = '1') then
	  R <= "00111111" ;
     G <= "11111000" ;
     B <= "11000111" ;
  elsif(par2on = '1') then
	  R <= "00111111" ;
     G <= "11111000" ;
     B <= "11000111" ;
  elsif( (texton = '0') or (graphon = '0') or (paron = '0') or (par2on = '0') or (Adcgraphon = '0') or (AdcgraphonB = '0')) then
	  R <= "00000000" ;
	  G <= "00000000" ;
	  B <= "00000000" ;
  end if ;

--   if (graphon = '1') then 
--	  R <= "11001111" ;
--     G <= "11111001" ;
--     B <= "00111111" ;
--  
--   elsif( (texton = '0') or (graphon = '0') ) then
--	  R <= "00000000" ;
--	  G <= "00000000" ;
--	  B <= "00000000" ;
--	end if;
--     

end process;


end behaviour;  